# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ${self:custom.environment.service}
app: ${self:custom.environment.app}
tenant: ${self:custom.environment.tenant}

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x

# you can overwrite defaults here
  stage: dev
#  region: eu-west-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

  # Allow IAM role to publish to the SNS topic
  iamRoleStatements:
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource: ${self:custom.snsTopicArn}
    - Effect: Allow
      Action:
        - SQS:SendMessage
      Resource: ${self:custom.sqsToshlDLQArn}
# you can define service wide environment variables here
#  environment:
#    variable1: value1

plugins:
  - serverless-domain-manager
  - serverless-plugin-lambda-dead-letter

custom:
  environment: ${file(env.yml)}
  customDomain:
    domainName: ${self:custom.environment.domainName}
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true

  # SNS/SQS configuration
  snsTopic: "${self:service}-${self:provider.stage}-expense-created"
  snsTopicArn: { "Fn::Join" : ["", ["arn:aws:sns:${self:provider.region}:", { "Ref" : "AWS::AccountId" }, ":${self:custom.snsTopic}" ] ]  }
  sqsToshlDLQ: "${self:custom.snsTopic}-toshl-dlq"
  sqsToshlDLQArn: { "Fn::Join" : ["", ["arn:aws:sqs:${self:provider.region}:", { "Ref" : "AWS::AccountId" }, ":${self:custom.sqsToshlDLQ}" ] ]  }

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
  monzo:
    handler: bin/monzo
    events:
      - http:
          path: api/v1/create
          method: post
    environment:
      snsTopicArn: ${self:custom.snsTopicArn}
      categoryData: ${ssm:/${self:service}/CategoryData}

  toshl:
    handler: bin/toshl
    events:
      - sns: ${self:custom.snsTopic}
    deadLetter:
      sqs: ${self:custom.sqsToshlDLQ}
    environment:
      snsTopicArn: ${self:custom.snsTopicArn}
      token: ${ssm:/${self:service}/ToshlToken~true}
      accountId: ${ssm:/${self:service}/ToshlAccountId}
      categoryData: ${ssm:/${self:service}/CategoryData}
